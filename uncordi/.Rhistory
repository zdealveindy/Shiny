chem <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/chemistry.txt', row.names = 1)
chem <- chem [, -15] # removes slope, which is not chemical variable
stand.chem <- scale (chem) #standardize the variables - alternatively, use decostand (chem, 'stand')
PCA <- rda (stand.chem)
# Finally, in the PCA object select the component $eig with vector of eigenvalues:
ev <- PCA$CA$eig
# calculate axis-importance and draw the barplots:
evplot (ev)
library (BiodiversityR)
sig <- PCAsignificance (PCA, axes = 14)
sig
install.packages ('BiodiversityR')
library (BiodiversityR)
sig <- PCAsignificance (PCA, axes = 14)
sig
sig
sig
sig
# For sure read data again if you haven't done it above:
library (vegan)
chem <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/chemistry.txt', row.names = 1)
chem <- chem [, -15] # removes slope, which is not chemical variable
# randomize values in each column independently; function "apply" takes each column (MARGIN = 2), assigns it into
# variable "x", and applies "sample (x)" to randomize it; then the columns are stacked back into data frame:
set.seed (1234) # this is here just to make sure that you will get the same random values as me
chem.rand <- apply (chem, MARGIN = 2, FUN = function (x) sample (x)) # or simply chem.rand <- apply (chem, 2, sample)
# standardize the random variables, and calculate PCA:
stand.chem.rand <- scale (chem.rand) #alternatively, use "decostand (chem, method = 'stand')"
PCA.rand <- rda (stand.chem.rand)
PCA.rand
PCA.rand
x <- rnorm (100)
y1 <- 0 + 1*x
cor (x, y1)
err <- rnorm (100)/10
y1 <- 0 + 1*x + er
y1 <- 0 + 1*x + err
cor (x, y1)
err <- rnorm (100)/5
y1 <- 0 + 1*x + err
cor (x, y1)
y2 <- 0 + 0.5*x + err
cor (x, y2)
y3 <- 0 + 0*x + err
cor (x, y3)
library (sjstats)
install.packages ('sjstats')
library (sjstats)
rmse
lm1 <- lm (y1 ~ x)
rmse (lm1)
library (vegan)
library (sjstats)
RsquareAdj (lm1)$r
RsquareAdj (lm1)$r.squared
rmse (lm1)
lm2 <- lm (y2 ~ x)
RsquareAdj (lm1)$r.squared
rmse (lm2)
RsquareAdj (lm2)$r.squared
rmse (lm2)
lm3 <- lm (y3 ~ x)
RsquareAdj (lm3)
rmse (lm3)
par (mfrow = c(1,3))
plot (y1 ~ x)
plot (y2 ~ x)
plot (y3 ~ x)
plot (y1 ~ x, ylim = c(-3,3))
plot (y1 ~ x, ylim = c(-3,3))
plot (y2 ~ x, ylim = c(-3,3))
plot (y3 ~ x, ylim = c(-3,3))
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3))
plot (y2 ~ x, ylim = c(-3,3))
plot (y3 ~ x, ylim = c(-3,3))
r2.1 <- RsquareAdj (lm1)$r.squared
rmse1 <- rmse (lm1)
plot (y1 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE = ', rmse1), paste ('R2 = ', r2.1))
plot (y2 ~ x, ylim = c(-3,3))
plot (y3 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE = ', rmse1), paste ('R2 = ', r2.1)))
rmse1
round (rmse1)
round (rmse1, 3)
round (rmse1, 4)
round (rmse1, 3)
legend ('bottomright', legend = c(paste ('RMSE = ', round (rmse1, 4)), paste ('R2 = ', round (r2.1, 4))))
plot (y1 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4))))
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4))))
plot (y2 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4))))
plot (y3 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4))))
rmse2 <- rmse (lm2)
r2.2 <- RsquareAdj (lm2)$r.squared
rmse2 <- rmse (lm2)
r2.3 <- RsquareAdj (lm3)$r.squared
rmse3 <- rmse (lm3)
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4))))
plot (y2 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4))))
plot (y3 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4))))
windows ()
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4))))
plot (y2 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4))))
plot (y3 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4))))
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4))))
plot (y2 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4))))
plot (y3 ~ x, ylim = c(-3,3))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4))))
abline (lm (y1 ~ x))
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3))
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4))))
plot (y2 ~ x, ylim = c(-3,3))
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4))))
plot (y3 ~ x, ylim = c(-3,3))
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4))))
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y = 0 + 1*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4))))
plot (y2 ~ x, ylim = c(-3,3), main = 'y = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4))))
plot (y3 ~ x, ylim = c(-3,3), main = 'y = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4))))
lm1
lm1$coefficients
paste ('y =', round (lm1$coefficients[1], 2),'+', lm1$coefficients[2],'*x')
paste ('y =', round (lm1$coefficients[1], 4),'+', round (lm1$coefficients[2], 4),'*x')
paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
lm1
lm2
lm3
png ('rmse.vs.r2.png',width = 12, height = 4, units = 'in')
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
dev.off ()
png ('rmse.vs.r2.png',width = 12, height = 4, units = 'in', res = 600)
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
dev.off ()
png ('rmse.vs.r2.png',width = 12, height = 4, units = 'in', res = 600)
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y1 = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y2 = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y3 = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
dev.off ()
x <- rnorm (100)
err <- rnorm (100)/5
y1 <- 0 + 1*x + err
lm1 <- lm (y1 ~ x)
r2.1 <- RsquareAdj (lm1)$r.squared
rmse1 <- rmse (lm1)
y2 <- 0 + 0.5*x + err
lm2 <- lm (y2 ~ x)
r2.2 <- RsquareAdj (lm2)$r.squared
rmse2 <- rmse (lm2)
y3 <- 0 + 0*x + err
cor (x, y3)^2
lm3 <- lm (y3 ~ x)
r2.3 <- RsquareAdj (lm3)$r.squared
rmse3 <- rmse (lm3)
png ('rmse.vs.r2.png',width = 12, height = 4, units = 'in', res = 600)
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y1 = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y2 = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y3 = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
dev.off ()
set.seed (1234)
x <- rnorm (100)
err <- rnorm (100)/5
y1 <- 0 + 1*x + err
lm1 <- lm (y1 ~ x)
r2.1 <- RsquareAdj (lm1)$r.squared
rmse1 <- rmse (lm1)
y2 <- 0 + 0.5*x + err
lm2 <- lm (y2 ~ x)
r2.2 <- RsquareAdj (lm2)$r.squared
rmse2 <- rmse (lm2)
y3 <- 0 + 0*x + err
cor (x, y3)^2
lm3 <- lm (y3 ~ x)
r2.3 <- RsquareAdj (lm3)$r.squared
rmse3 <- rmse (lm3)
png ('rmse.vs.r2.png',width = 12, height = 4, units = 'in', res = 600)
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y1 = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y2 = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y3 = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
dev.off ()
set.seed (123)
x <- rnorm (100)
err <- rnorm (100)/5
y1 <- 0 + 1*x + err
lm1 <- lm (y1 ~ x)
r2.1 <- RsquareAdj (lm1)$r.squared
rmse1 <- rmse (lm1)
y2 <- 0 + 0.5*x + err
lm2 <- lm (y2 ~ x)
r2.2 <- RsquareAdj (lm2)$r.squared
rmse2 <- rmse (lm2)
y3 <- 0 + 0*x + err
cor (x, y3)^2
lm3 <- lm (y3 ~ x)
r2.3 <- RsquareAdj (lm3)$r.squared
rmse3 <- rmse (lm3)
png ('rmse.vs.r2.png',width = 12, height = 4, units = 'in', res = 600)
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y1 = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y2 = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y3 = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
dev.off ()
set.seed (12345)
x <- rnorm (100)
err <- rnorm (100)/5
y1 <- 0 + 1*x + err
lm1 <- lm (y1 ~ x)
r2.1 <- RsquareAdj (lm1)$r.squared
rmse1 <- rmse (lm1)
y2 <- 0 + 0.5*x + err
lm2 <- lm (y2 ~ x)
r2.2 <- RsquareAdj (lm2)$r.squared
rmse2 <- rmse (lm2)
y3 <- 0 + 0*x + err
cor (x, y3)^2
lm3 <- lm (y3 ~ x)
r2.3 <- RsquareAdj (lm3)$r.squared
rmse3 <- rmse (lm3)
png ('rmse.vs.r2.png',width = 12, height = 4, units = 'in', res = 600)
par (mfrow = c(1,3))
plot (y1 ~ x, ylim = c(-3,3), main = 'y1 = 0 + 1.0*x + err')
abline (lm (y1 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse1, 4)), paste ('R2 =', round (r2.1, 4)), paste ('y = ', round (lm1$coefficients[1], 4),' + ', round (lm1$coefficients[2], 4),'*x', sep = '')))
plot (y2 ~ x, ylim = c(-3,3), main = 'y2 = 0 + 0.5*x + err')
abline (lm (y2 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse2, 4)), paste ('R2 =', round (r2.2, 4)), paste ('y = ', round (lm2$coefficients[1], 4),' + ', round (lm2$coefficients[2], 4),'*x', sep = '')))
plot (y3 ~ x, ylim = c(-3,3), main = 'y3 = 0 + 0*x + err')
abline (lm (y3 ~ x))
legend ('bottomright', legend = c(paste ('RMSE =', round (rmse3, 4)), paste ('R2 =', round (r2.3, 4)), paste ('y = ', round (lm3$coefficients[1], 4),' + ', round (lm3$coefficients[2], 4),'*x', sep = '')))
dev.off ()
ivi <- read.delim ('clipboard', head = T)
View(ivi)
ivi <- read_delim ('clipboard', head = T, delim = '\t')
ivi <- readr::read_delim ('clipboard', head = T, delim = '\t')
ivi <- readr::read_delim ('clipboard', delim = '\t')
?read.delim
ivi <- read.delim ('clipboard', delim = '\t', nrows = 1)
ivi <- read.delim ('clipboard', nrows = 1)
ivi
ivi <- read.delim ('clipboard', nrows = 1, head = F)
View(ivi)
ivi[1,]
traits <- read.delim ('clipboard')
traits
ivi[1,]
ivi[1,] %in% traits$Species
ivi[1,]
ivi[1,1]
ivi[1,2]
ivi[1,3]
ivi[1,4]
as.character (ivi[1,])
ivi
ivi <- read.delim ('clipboard', nrows = 1, head = F)
ivi$V1
ivi <- read.delim ('clipboard', nrows = 1, head = T)
ivi$Plot
ivi
ivi <- read.delim ('clipboard', head = T)
ivi$Plot
as.character (ivi$Plot)
as.character (ivi$Plot) %in% traits$Species
write.table ('clipboard', as.character (ivi$Plot) %in% traits$Species)
write.table (file = 'clipboard', as.character (ivi$Plot) %in% traits$Species)
16282-11960-1600
set.seed (123)
n.ind <- round (rexp (1000, rate = .001))
n.ind <- n.ind [n.ind >= 5]
distr <- lapply (n.ind, FUN = function (no) rpois (no, lambda = 20))
MEAN <- sapply (distr, mean)
SD <- sapply (distr, sd)
CV <- SD/MEAN
FUN = function (d)
{
mean (replicate (999, expr = {distr.temp <- sample (d, 5); sd (distr.temp)/mean (distr.temp)}))
}
plot (CV_subsampled ~ CV) # relationship of CV (ITV in the ms) to number of individuals
FUN = function (d)
{
mean (replicate (999, expr = {distr.temp <- sample (d, 5); sd (distr.temp)/mean (distr.temp)}))
}
CV_subsampled <- unlist (lapply (distr, FUN = function (d)
{
mean (replicate (999, expr = {distr.temp <- sample (d, 5); sd (distr.temp)/mean (distr.temp)}))
}))
par (mfrow = c(2,2))
plot (CV_subsampled ~ CV) # relationship of CV (ITV in the ms) to number of individuals
plot (CV ~ n.ind, log = 'x') # relationship between CV and subsampled CV (“rarefaction in the ms)
plot (CV_subsampled ~ n.ind, log = 'x') # relationship between subsampled CV (“rarefied”) and number of individuals
plot (n.ind ~ CV_subsampled, log = 'xy', xlab = 'ITV', ylab = 'Species abundance')  # relationship between "ITV and species abundance"
par (mfrow = c(2,2))
plot (CV ~ n.ind, log = 'x', main = 'Relationship of CV to sample size') # the relationship of CV (ITV in the ms) to number of individuals
plot (CV_subsampled ~ CV, main = 'Relationship between CV and sub-sampled CV') # the relationship between CV and subsampled CV (“rarefaction in the ms)
plot (CV_subsampled ~ n.ind, log = 'x', main = 'Relationship between subsampled CV and sample size') # relationship between subsampled CV (“rarefied”) and number of individuals
plot (n.ind ~ CV_subsampled, log = 'xy', xlab = 'ITV', ylab = 'Species abundance', main = 'Relationship between ITV (CV) and Species abundance (sample size)')  # relationship between "ITV and species abundance"
windows ()
par (mfrow = c(2,2))
plot (CV ~ n.ind, log = 'x', main = 'Relationship of CV\n to sample size') # the relationship of CV (ITV in the ms) to number of individuals
plot (CV_subsampled ~ CV, main = 'Relationship between CV\n and sub-sampled CV') # the relationship between CV and subsampled CV (“rarefaction in the ms)
plot (CV_subsampled ~ n.ind, log = 'x', main = 'Relationship between subsampled CV\n and sample size') # relationship between subsampled CV (“rarefied”) and number of individuals
plot (n.ind ~ CV_subsampled, log = 'xy', xlab = 'ITV', ylab = 'Species abundance', main = 'Relationship between ITV (CV)\n and Species abundance (sample size)')  # relationship between "ITV and species abundance"
library (labdsv)
install.packages ('labdsv')
library (labdsv)
dsvdis
?dsvdis
decostand
library (vegan)
decostand
fix (decostand)
v <- c(1,2,3)
v^2
sum (v^2)
sqrt (sum (v^2))
v/sqrt (sum (v^2))
(v/sqrt (sum (v^2)))^2
sum ((v/sqrt (sum (v^2)))^2)
##HomeWork_2 #D06B44002_ Chen, CHien-Fan
nanjen40.spe <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/nanjen40-spe.txt', row.names = 1)
nanjen40.env <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/nanjen40-env.txt', row.names = 1)
#subset plot 61~62
rownames(nanjen40.spe)
nanjen6162.spe <- nanjen40.spe [16:17,]
#Question 1
library(vegan)
vegdist (nanjen6162.spe, "euc") ##32.8259
#Question 2
dis.bray <- vegdist (nanjen40.spe)
min (dis.bray) ## 0.2677652
dis.bray.matrix <- as.matrix (dis.bray)
which(dis.bray.matrix == min (dis.bray), arr.ind = TRUE) ##125 & 98
#Question 3
type.1 <- nanjen40.spe [nanjen40.env$vegtype == 1]
type.2 <- nanjen40.spe [nanjen40.env$vegtype == 2]
type.3 <- nanjen40.spe [nanjen40.env$vegtype == 3]
mean (vegdist(type.1)) #0.8056149
mean (vegdist(type.2)) #0.7189822
mean (vegdist(type.3)) #0.6915542
nanjen40.env$vegtype == 1
##exercise 2
#Bray_spe
Bray_spe <- vegdist (nanjen40.spe)
env.stand <- decostand (nanjen40.env, 'standardize', MARGIN = 2)
env.topo <- env.stand [,3:6]
env.chemA <- env.stand [,9:19]
env.chemB <- env.stand [,20:30]
Eucl_topo <- vegdist(env.topo, 'eucl')
Eucl_chemA <- vegdist (env.chemA, 'eucl')
Eucl_chemB <- vegdist (env.chemB, 'eucl')
##Bray_spe ~ Eucl_topo
plot(Bray_spe ~ Eucl_topo)
cor.test(Bray_spe, Eucl_topo, method = 'pearson') #0.4240693
##Bray_spe ~Eucl_chemA
plot(Bray_spe ~ Eucl_chemA)
cor.test(Bray_spe, Eucl_chemA, method = 'pearson') #0.1998986
##Bray_spe ~ Eucl_chemB
plot(Bray_spe ~ Eucl_chemB)
cor.test(Bray_spe, Eucl_chemB, method = 'pearson') #0.1441443
#### Bray_spe ~ Eucl_topo (0.4240693) has strongest correlation with composition
nanjen40.spe <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/nanjen40-spe.txt', row.names = 1)
nanjen40.env <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/nanjen40-env.txt', row.names = 1)
nanjen40.env
nanjen40.spe
eucl.dist = vegdist(x = nanjen40.spe,method = 'euclidean',diag = T,upper = T)
ya = as.matrix(eucl.dist)
ya[16,17]
bray.dist = vegdist(x = nanjen40.spe,method = 'bray')
ye = as.matrix(bray.dist)
hey = ye[ye > 0]
a = min(hey)
which(ye == a)
1074/40 #26.85 ->26+1 = 27
0.85*40 #34
ye[27,34]
type1 = nanjen40.spe[nanjen40.env$vegtype == 1,]
type2 = nanjen40.spe[nanjen40.env$vegtype == 2,]
type3 = nanjen40.spe[nanjen40.env$vegtype == 3,]
bray.type1 = vegdist(type1,method = 'bray')
bray.type2 = vegdist(type2,method = 'bray')
bray.type3 = vegdist(type3,method = 'bray')
mean(bray.type1) #0.6356127
mean(bray.type2) #0.7054762
mean(bray.type3) #0.7013553
nanjen40.spe <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/nanjen40-spe.txt', row.names = 1)
nanjen40.env <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/nanjen40-env.txt', row.names = 1)
library("vegan")
ec.dist<-vegdist(nanjen40.spe, method = "e")
bray.dist.1<-vegdist(nanjen40.spe, method="bray")
bray.dist<-as.matrix(vegdist(nanjen40.spe, method="bray"))
most.similar.BC<- min(setdiff(bray.dist, 0)) # most similiar plot (BC measures dissimilarity so 1-BC value = most similar)
most.similar.BC
which(bray.dist==most.similar.BC, arr.ind = TRUE)
most.similar.BC==bray.dist["125","98"] #confirming that they match the lowest value
nan1<-nanjen40.spe[nanjen40.env$vegtype==1,]
nan2<-nanjen40.spe[nanjen40.env$vegtype==2,]
nan3<-nanjen40.spe[nanjen40.env$vegtype==3,]
mean.t1<-mean(vegdist(nan1))
mean.t2<-mean(vegdist(nan2))
mean.t3<-mean(vegdist(nan3))
mean.t1
mean.t2
mean.t3
dune2.spe <- read.delim ('http://www.davidzeleny.net/anadat-r/data-download/dune2.spe.txt', row.names = 1)
range (dune2.spe)
decorana (dune2.spe)
library (vegan)
decorana (dune2.spe)
ordiplot
?ordiplot
plot.cca
?plot.rda
PCA <- rda (dune2.spe)
biplot (PCA)
plot (PCA)
plot (PCA, display = 'species', select = TRUE)
file.choose ()
grasslands.spe <- read.delim ('https://raw.githubusercontent.com/zdealveindy/anadat-r/master/data/grasslands-spe.txt', row.names = 1)
grasslands.env <- read.delim ('https://raw.githubusercontent.com/zdealveindy/anadat-r/master/data/grasslands-env.txt')
library(shiny); runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
runApp('D:/Zeleny/Dropbox/Shiny/uncordi/uncordi.R')
